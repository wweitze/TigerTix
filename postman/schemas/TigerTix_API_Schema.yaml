openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'TigerTix'
  license:
    name: MIT
servers:
  - url: 'https://tigerchow.com/v1'
paths:
  /user/{id}:
    get:
      summary: 'Sample endpoint: Returns details about a particular user'
      operationId: listUser
      tags:
        - user
      parameters:
        - name: id
          in: query
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'Sample response: Details about a user by ID'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /event/{id}:
    get:
      summary: 'Sample endpoint: Returns details about a particular event'
      operationId: listEvent
      tags:
        - event
      parameters:
        - name: id
          in: query
          description: ID of the event
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'Same response: Details about a event by ID'
          headers:
            x-next:
              description: A link to the next page of responses
              schema: 
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Error'
components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
        - password
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        password:
          type: string
          writeOnly: true
        tag:
          type: string
    Event:
      type: object
      required:
        - id
        - title
        - date
        - venue
        - price
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        date:
          type: string
          format: date
        venue:
          type: string
        price:
          type: number
          format: float
        tag:
          type: string
    
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []